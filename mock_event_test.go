// Code generated by mockery v1.0.0
package cqrs

import mock "github.com/stretchr/testify/mock"
import uuid "github.com/satori/go.uuid"

// MockEvent is an autogenerated mock type for the Event type
type MockEvent struct {
	mock.Mock
}

// AggregateId provides a mock function with given fields:
func (_m *MockEvent) AggregateId() uuid.UUID {
	ret := _m.Called()

	var r0 uuid.UUID
	if rf, ok := ret.Get(0).(func() uuid.UUID); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(uuid.UUID)
		}
	}

	return r0
}

// EventName provides a mock function with given fields:
func (_m *MockEvent) EventName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Version provides a mock function with given fields:
func (_m *MockEvent) Version() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}
